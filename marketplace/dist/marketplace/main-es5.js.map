{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/buy-item/buy-item.component.ts","webpack:///src/app/components/buy-item/buy-item.component.html","webpack:///src/app/components/item-card/item-card.component.ts","webpack:///src/app/components/item-card/item-card.component.html","webpack:///src/app/components/landing/landing.component.ts","webpack:///src/app/components/landing/landing.component.html","webpack:///src/app/components/sell-item/details/details.component.ts","webpack:///src/app/components/sell-item/details/details.component.html","webpack:///src/app/components/sell-item/sell-item.component.ts","webpack:///src/app/components/sell-item/sell-item.component.html","webpack:///src/app/components/sell-item/submit/submit.component.ts","webpack:///src/app/components/sell-item/submit/submit.component.html","webpack:///src/app/components/sell-item/upload/upload.component.ts","webpack:///src/app/components/sell-item/upload/upload.component.html","webpack:///src/app/components/user-actions/user-actions.component.ts","webpack:///src/app/components/user-actions/user-actions.component.html","webpack:///src/app/services/upload-item.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BuyItemComponent","ItemCardComponent","LandingComponent","DetailsComponent","uploadItemService","item","name","seller","description","price","currentItem","emit","onPrev","onNext","SellItemComponent","pages","selectedIndex","value","console","log","length","SubmitComponent","uploadItemToServer","onSellAnotherItem","UploadComponent","nextDisabled","images","uploadedImages","imageInput","onImageUploaded","index","removeImage","handleUpload","UserActionsComponent","UploadItemService","http","_endpoint","_currentItem","_uploadedImages","_submittedItems","event","callback","target","files","file","reader","FileReader","addEventListener","result","push","toString","readAsDataURL","newUploadedImages","i","itemToUpload","post","resetCurrentItem","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserActionsComponent } from './components/user-actions/user-actions.component';\nimport { SellItemComponent } from './components/sell-item/sell-item.component';\nimport { BuyItemComponent } from './components/buy-item/buy-item.component';\nimport { UploadComponent } from './components/sell-item/upload/upload.component';\nimport { DetailsComponent } from './components/sell-item/details/details.component';\nimport { SubmitComponent } from './components/sell-item/submit/submit.component';\n\n\nconst routes: Routes = [\n  { path: '', component: UserActionsComponent },\n  { path: 'sell', component: SellItemComponent,\n    children: [\n      { path: 'upload', component: UploadComponent },\n      { path: 'details', component: DetailsComponent },\n      { path: 'submit', component: SubmitComponent },\n    ]},\n  { path: 'buy', component: BuyItemComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'marketplace';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n// Material imports\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n// Flex + Grid Layout\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { UserActionsComponent } from './components/user-actions/user-actions.component';\nimport { SellItemComponent } from './components/sell-item/sell-item.component';\nimport { BuyItemComponent } from './components/buy-item/buy-item.component';\nimport { ItemCardComponent } from './components/item-card/item-card.component';\nimport { UploadComponent } from './components/sell-item/upload/upload.component';\nimport { DetailsComponent } from './components/sell-item/details/details.component';\nimport { SubmitComponent } from './components/sell-item/submit/submit.component';\nimport { MatTabsModule } from '@angular/material/tabs';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingComponent,\n    UserActionsComponent,\n    SellItemComponent,\n    BuyItemComponent,\n    ItemCardComponent,\n    UploadComponent,\n    DetailsComponent,\n    SubmitComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n\n    // Material\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    ClipboardModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatListModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatTabsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-buy-item',\n  templateUrl: './buy-item.component.html',\n  styleUrls: ['./buy-item.component.css']\n})\nexport class BuyItemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Item list will go here</h1>\n\n<button class=\"sticky\" mat-fab color=\"primary\" >\n    <mat-icon>add_business</mat-icon>\n</button>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-item-card',\n  templateUrl: './item-card.component.html',\n  styleUrls: ['./item-card.component.css']\n})\nexport class ItemCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title>Shiba Inu</mat-card-title>\n      <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\">\n    <mat-card-content>\n      <p>\n        The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n        A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n        bred for hunting.\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button>LIKE</button>\n      <button mat-button>SHARE</button>\n    </mat-card-actions>\n  </mat-card>\n  \n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>landing works!</p>\n","import { Component, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { PartialItem } from 'src/app/models/item';\nimport { UploadItemService } from 'src/app/services/upload-item.service';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit, OnDestroy {\n  @Output() switch: EventEmitter<string> = new EventEmitter();\n  item: PartialItem = {\n    name: '',\n    seller: '',\n    description: '',\n    price: '$',\n  };\n\n  constructor(private uploadItemService: UploadItemService) { }\n\n  ngOnInit(): void {\n    this.item = this.uploadItemService.currentItem;\n  }\n\n  ngOnDestroy(): void {\n    this.uploadItemService.currentItem = this.item;\n  }\n\n  onNext() {\n    this.switch.emit('next');\n  }\n\n  onPrev() {\n    this.switch.emit('prev');\n  }\n}\n","<div id=\"content\">\n    <form #detailsForm=\"ngForm\">\n        <div fxLayout=\"column\" fxLayoutAlign=\"start center\" fxLayoutGap=\"1%\">\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n                <div id=\"picture\">Some picture here.</div>\n                <div fxLayout=\"column\" fxLayoutAlign=\"space-around center\">\n                    <mat-form-field appearance=\"standard\">\n                        <mat-label>Item Name</mat-label>\n                        <input matInput\n                            required\n                            placeholder=\"Name\"\n                            [(ngModel)]=\"item.name\"\n                            name=\"name\">\n                    </mat-form-field>\n                    <mat-form-field appearance=\"standard\">\n                        <mat-label>Sale Price</mat-label>\n                        <input matInput \n                            required\n                            placeholder=\"$\"\n                            [(ngModel)]=\"item.price\"\n                            name=\"price\">\n                    </mat-form-field>\n                </div>\n            </div>\n            <div id=\"detailsDiv\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n                <mat-form-field>\n                    <mat-label>Description</mat-label>\n                    <textarea matInput\n                        rows=\"20\"\n                        [(ngModel)]=\"item.description\"\n                        name=\"description\"></textarea>\n                </mat-form-field>\n            </div>\n        </div>\n    </form>\n</div>\n<div id=\"footer\" class=\"mat-elevation-z24\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <button mat-flat-button (click)=\"onPrev()\">\n        Back\n    </button>\n    <button mat-flat-button \n        type=\"submit\"\n        color=\"primary\"\n        (click)=\"onNext()\"\n        [disabled]=\"!detailsForm.form.valid\">\n        Submit\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sell-item',\n  templateUrl: './sell-item.component.html',\n  styleUrls: ['./sell-item.component.css']\n})\nexport class SellItemComponent implements OnInit {\n  pages = ['upload', 'details', 'submit'];\n  selectedIndex = 0;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  handleOnSwitch(value: string) {\n    console.log(value);\n    if (value === 'prev' && this.selectedIndex > 0) {\n      this.selectedIndex--;\n    } else if (value === 'next') {\n      this.selectedIndex = (this.selectedIndex + 1) % this.pages.length;\n    }\n  }\n}\n","<div id=\"sell-item-container\" [ngSwitch]=\"pages[selectedIndex]\">\n    <app-upload *ngSwitchCase=\"'upload'\" (switch)=\"handleOnSwitch($event)\"></app-upload>\n    <app-details *ngSwitchCase=\"'details'\" (switch)=\"handleOnSwitch($event)\"></app-details>\n    <app-submit *ngSwitchCase=\"'submit'\" (switch)=\"handleOnSwitch($event)\"></app-submit>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { UploadItemService } from '../../../services/upload-item.service';\n\n@Component({\n  selector: 'app-submit',\n  templateUrl: './submit.component.html',\n  styleUrls: ['./submit.component.css']\n})\nexport class SubmitComponent implements OnInit {\n  @Output() switch: EventEmitter<string> = new EventEmitter();\n  constructor(private uploadItemService: UploadItemService) { }\n\n  ngOnInit(): void {\n    this.uploadItemService.uploadItemToServer();\n  }\n\n  onSellAnotherItem() {\n    this.switch.emit('next');\n  }\n}\n","<div id=\"content\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <mat-icon id=\"doneIcon\">done</mat-icon>\n    <h1 class=\"mat-h1\" align=\"center\">Your item has been successfully submitted for sale!</h1>\n</div>\n<div id=\"footer\" class=\"mat-elevation-z24\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div></div>\n    <button mat-flat-button color=\"primary\" (click)=\"onSellAnotherItem()\">\n        Sell Another Item\n    </button>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { UploadItemService } from '../../../services/upload-item.service';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit {\n  @Output() switch = new EventEmitter<string>();\n  nextDisabled = true;\n  images: string[] = [];\n  selectedIndex: number;\n\n  constructor(private uploadItemService: UploadItemService) { }\n\n  ngOnInit(): void {\n    this.images = this.uploadItemService.uploadedImages;\n    if (this.images.length > 0) {\n      this.selectedIndex = 0;\n      this.nextDisabled = false;\n    }\n  }\n\n  /**\n   * Called when an image is uploaded. Enables the next button with a valid image.\n   * @param imageInput the image input\n   */\n  handleUpload(imageInput: any) {\n    this.uploadItemService.onImageUploaded(imageInput, () => {\n      this.selectedIndex = this.images.length - 1;\n    });\n    this.images = this.uploadItemService.uploadedImages;\n    this.nextDisabled = false;\n  }\n\n  handleDelete(index: number) {\n    this.uploadItemService.removeImage(index);\n    this.images = this.uploadItemService.uploadedImages;\n    this.selectedIndex = this.images.length - 1;\n  }\n\n  handleSelect(index: number) {\n    this.selectedIndex = index;\n  }\n\n  onNext() {\n    this.switch.emit('next');\n  }\n}\n","<div id=\"content\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\">\n    \n    <!-- upload image directions -->\n    <div class=\"upload-image-description\" *ngIf=\"images.length === 0\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"30px\">\n        <mat-icon class=\"large-icon\">add_a_photo</mat-icon>\n        <h2 class=\"mat-h3\">Upload an image of the object you wish to sell.</h2>\n    </div>\n    \n    <!-- selected image -->\n    <div *ngIf=\"images.length !== 0\" class=\"large-image-container\" [style.background-image]=\"'url(' + images[selectedIndex] + ')'\">\n        <button mat-mini-fab class=\"delete-button\" (click)=\"handleDelete(selectedIndex)\">\n            <mat-icon>delete</mat-icon>\n        </button>\n    </div>\n\n    <!-- small image gallery -->\n    <div class=\"bottom-image-gallery\" fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"3px\">\n        <div *ngFor=\"let image of images; index as id\" class=\"small-image-container\" [style.background-image]=\"'url(' + image+ ')'\" (click)=\"handleSelect(id)\">\n        </div>\n    </div>\n\n    <!-- upload image button -->\n    <label for=\"image-upload\" class=\"image-upload-button\">\n        <input #imageInput id=\"image-upload\" type=\"file\" accept=\"image/*\" (change)=\"handleUpload($event)\">\n        Select Photo\n    </label>\n</div>\n<div id=\"footer\" class=\"mat-elevation-z24\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div></div>\n    <button mat-flat-button color=\"primary\" (click)=\"onNext()\" [disabled]=\"nextDisabled\">\n        Next\n    </button>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { BuyItemComponent } from '../buy-item/buy-item.component';\nimport { SellItemComponent } from '../sell-item/sell-item.component';\n\n@Component({\n  selector: 'app-user-actions',\n  templateUrl: './user-actions.component.html',\n  styleUrls: ['./user-actions.component.css']\n})\nexport class UserActionsComponent implements OnInit {\n  @ViewChild('buyItemPage') buyItem: BuyItemComponent;\n  @ViewChild('sellItemPage') sellItem: SellItemComponent;\n  constructor() { \n    \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-tab-group mat-align-tabs=\"center\" class=\"stickyy\">\n    <mat-tab>\n        <ng-template mat-tab-label>\n          <mat-icon class=\"example-tab-icon\">shop</mat-icon>\n        </ng-template>\n        <app-sell-item #sellItem></app-sell-item>\n      </mat-tab>\n    <mat-tab>\n        <ng-template mat-tab-label>\n          <mat-icon class=\"example-tab-icon\">storefront</mat-icon>\n        </ng-template>\n        <app-buy-item #buyItem ></app-buy-item>\n      </mat-tab>\n      <mat-tab>\n        <ng-template mat-tab-label>\n          <mat-icon class=\"example-tab-icon\">chat_bubble</mat-icon>\n        </ng-template>\n        </mat-tab>\n</mat-tab-group>\n\n","import { HttpClient } from '@angular/common/http';\nimport { PartialItem, UploadedItem } from '../models/item';\nimport { Injectable } from '@angular/core';\n\n/**\n * Handles item creation and local storage\n * as user progress through sell process.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class UploadItemService {\n    private _endpoint = '/api/upload-item';\n    // To view current item that user wants to sell\n    private  _currentItem: PartialItem = {\n      name: '',\n      seller: 'Roddy',\n      description: '',\n      price: '',\n    };\n    // To view images that this user uploaded.\n    private _uploadedImages: string[] = [];\n    // To view history of items that this user submitted.\n    private _submittedItems: UploadedItem[] = [];\n\n    constructor(private http: HttpClient) {}\n\n    get uploadedImages(): string[] {\n      return this._uploadedImages;\n    }\n\n    get currentItem(): PartialItem {\n      return this._currentItem;\n    }\n\n    set currentItem(value: PartialItem) {\n      this._currentItem = value;\n    }\n\n    get submittedItems(): UploadedItem[] {\n      return this._submittedItems;\n    }\n\n    // called when user uploads image\n    onImageUploaded(event: any, callback: () => void ) {\n      if (event.target.files && event.target.files[0]) {\n        const file = event.target.files[0];\n        const reader = new FileReader();\n        reader.addEventListener('loadend', () => {\n          if (typeof reader.result === 'string') {\n            this._uploadedImages.push(reader.result.toString());\n            callback();\n          }\n        });\n        reader.readAsDataURL(file);\n      }\n    }\n\n    // called when user removes images\n    removeImage(index: number) {\n      const newUploadedImages: string[] = [];\n      for (let i = 0; i < this._uploadedImages.length; i++) {\n        if (i !== index) {\n          newUploadedImages.push(this._uploadedImages[i]);\n        }\n      }\n      this._uploadedImages = newUploadedImages;\n    }\n\n    // called when user submits item\n    uploadItemToServer() {\n      const itemToUpload: UploadedItem = {\n        ...this._currentItem,\n        uploadedImages: this._uploadedImages\n      };\n      // adds to local history of items submitted\n      this._submittedItems.push(itemToUpload);\n      // submits item to server\n      this.http.post<any>(this._endpoint, itemToUpload);\n      // reset current item and image urls\n      this.resetCurrentItem();\n    }\n\n    // called when user wants to create a new item or submitted\n    resetCurrentItem() {\n      this._currentItem = {\n        name: '',\n        price: '',\n        description: '',\n        seller: 'Roddy'\n      };\n      this._uploadedImages = [];\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}